<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.playingmethod.mapper.ApiFightMapper">

    <select id="selectJoinFightUserData" resultType="com.ruoyi.domain.vo.JoinFightUserDataVO">
        SELECT tfu.fight_id,
               tfu.user_id,
               tfu.join_seat_num,
               ttu.user_name,
               ttu.nick_name,
               ttu.avatar
        FROM tt_fight_user tfu
                 LEFT JOIN tt_user ttu ON tfu.user_id = ttu.user_id
        WHERE tfu.id = #{fightUserId}
    </select>

    <select id="selectOrnamentsDataListByUserIdAndFightId" resultType="com.ruoyi.domain.vo.UserPackSackDataVO">
        SELECT tbr.id,
               tbr.ornaments_id,
               tbr.ornaments_price,
               tto.name,
               tto.short_name,
               tto.image_url,
               tto.exterior_name,
               tbr.ornaments_level_id,
               tol.level_img
        FROM tt_box_records tbr
                 LEFT JOIN tt_ornament tto ON tbr.ornaments_id = tto.id
                 LEFT JOIN tt_ornaments_level tol ON tbr.ornaments_level_id = tol.id
        WHERE tbr.user_id = #{userId}
          AND tbr.fight_id = #{fightId}
          AND tbr.source = '1'
          AND tbr.`status` = '4'
    </select>

    <select id="getFightList" resultType="com.ruoyi.domain.vo.ApiFightListDataVO">
        SELECT
            tf.id,
            tf.model,
            tf.player_num,
            tf.box_data,
            tf.box_price_total,
            tf.`status`,
            JSON_ARRAYAGG(JSON_OBJECT(
                'userId', tfu.user_id,
                'nickName', tu.nick_name,
                'userType', tu.user_type,
                'avatar', tu.avatar,
                'isHouseOwner', CASE WHEN tf.user_id = tfu.user_id THEN 0 ELSE 1 END
            )) AS userData,
            tf.update_time
        FROM tt_fight tf
        LEFT JOIN tt_fight_user tfu ON tf.id = tfu.fight_id
        LEFT JOIN tt_user tu ON tfu.user_id = tu.user_id
        <where>
            <if test="model == 0"> AND tf.model = '0' </if>
            <if test="model == 1"> AND tf.model = '1' </if>
            <if test="status == 0"> AND (tf.status = '0' or tf.status = '1' )</if>
            <if test="status == 2"> AND tf.status = '2' </if>
            <if test="userId != null"> AND tfu.user_id = #{userId} </if>
            <if test="fightId != null"> AND tf.id = #{fightId} </if>
        </where>
        GROUP BY tf.id
        ORDER BY <if test="status == 0">
        tf.status DESC,
        </if>tf.create_time DESC, tf.update_time DESC

    </select>

    <select id="getFightBoxList" resultType="com.ruoyi.domain.other.TtBoxA">
        SELECT
            box_id,
            box_name,
            price,
            box_img01,
            box_img02,
            box_type_id
        FROM tt_box
        <where>
            <if test="boxTypeId != null">and box_type_id = #{boxTypeId}</if>
            AND del_flag = '0' AND status = '0' AND is_fight = '0'
        </where>
    </select>

<!--  <select id="getFightRankingByDate" parameterType="String" resultType="com.ruoyi.playingmethod.model.vo.ApiFightRankingVO">-->
<!--    SELECT-->
<!--      tf.user_id,-->
<!--      SUM(tf.box_price_total) AS total_box_price,-->
<!--      tu.nick_name,-->
<!--      tu.avatar-->
<!--    FROM-->
<!--      tt_fight tf-->
<!--        JOIN-->
<!--      tt_user tu ON tf.user_id = tu.user_id-->
<!--    WHERE-->
<!--      DATE(tf.create_time) = #{date}-->
<!--    GROUP BY-->
<!--      tf.user_id-->
<!--    ORDER BY-->
<!--      total_box_price DESC-->
<!--      LIMIT 10-->
<!--  </select>-->

  <select id="getFightRankingByDate" parameterType="String" resultType="com.ruoyi.playingmethod.model.vo.ApiFightRankingVO">
      SELECT
          o1.user_id,
          o1.total_amount AS total_box_price,
          t1.nick_name,
          t1.avatar
      FROM
          (
              SELECT
                  user_id,
                  ROUND( SUM( abs( IFNULL( amount, 0 )) + abs( IFNULL( credits, 0 ))), 2 ) AS total_amount
              FROM
                  tt_user_blend_ercash
              WHERE
                  type = 0
                AND `source` IN ( 2, 4, 8 )
                AND create_time BETWEEN CONCAT(#{date},' 00:00:00') AND CONCAT(#{date},' 23:59:59')
              GROUP BY
                  user_id
              ORDER BY
                  total_amount DESC
                  LIMIT 50
          ) o1
              LEFT JOIN tt_user t1 ON o1.user_id = t1.user_id
  </select>

</mapper>