<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.admin.mapper.TtBoxRecordsMapper">

    <select id="selectBoxRecordsList" resultType="com.ruoyi.domain.vo.TtBoxRecordsDataVO"
            parameterType="com.ruoyi.domain.other.TtBoxRecordsBody">
        SELECT
        tbr.id AS boxRecordId,
        tbr.user_id,
        tbr.holder_user_id,
        tbr.box_id,
        tbr.box_name,
        tbr.box_price,
        tbr.ornament_id,
        tto.name,
        tto.image_url,
        tbr.ornaments_price,
        tbr.`status`,
        tbr.create_time,
        tbr.update_time,

        tto.name as ornamentName,
        tto.image_url as ornamentImgUrl
        FROM tt_box_records tbr
        LEFT JOIN tt_ornament tto ON tbr.ornament_id = tto.id
        <where>
            <if test="id != null">AND tbr.id = #{id}</if>
            <if test="userId != null">AND tbr.user_id = #{userId}</if>
            <if test="holderUserId != null">AND tbr.holder_user_id = #{holderUserId}</if>
            <if test="ornamentsId != null">AND tbr.ornament_id = #{ornamentsId}</if>
            <if test="itemName != null">AND tto.name LIKE CONCAT('%', #{itemName}, '%')</if>
            <if test="status != null">AND tbr.`status` = #{status}</if>
            <if test="boxId != null">AND tbr.box_id = #{boxId}</if>
            AND tbr.source IN ('0','1')
        </where>
        ORDER BY tbr.create_time DESC
    </select>

    <select id="selectBoxRecordsByDate" resultType="com.ruoyi.domain.entity.TtBoxRecords">
        SELECT id,
               user_id,
               box_id,
               box_name,
               box_price,
               ornament_id,
               ornaments_price,
               ornaments_level_id,
               status,
               create_time,
               update_time,
               source,
               fight_id,
               roll_id,
               holder_user_id
        FROM tt_box_records
        WHERE box_id = #{boxId}
          AND source IN ('0', '1')
          AND DATE (create_time) = #{formattedDate}
    </select>

    <select id="decomposeLog" resultType="com.ruoyi.domain.vo.TtBoxRecordsDataVO">
        SELECT
            tbr.id AS boxRecordId,
            tbr.user_id,
            tbr.holder_user_id,
            tbr.box_id,
            tbr.box_name,
            tbr.box_price,
            tbr.ornament_id,
            tto.name as ornament_name,
            tto.image_url as ornament_img_url,
            tol.level_img as ornament_level_img,
            tbr.ornaments_price,
            tbr.`status`,
            tbr.create_time,
            tbr.update_time
        FROM tt_box_records tbr
        LEFT JOIN tt_ornament tto ON tbr.ornament_id = tto.id
        LEFT JOIN tt_ornaments_level tol ON tol.id = tbr.ornaments_level_id
        <where>
            <if test="userId != null">AND tbr.user_id = #{userId}</if>
            <if test="boxRecordStatus != null">AND tbr.status = #{boxRecordStatus}</if>
        </where>
        ORDER BY tbr.update_time DESC
        limit #{limit},#{size}
    </select>

    <select id="myOwnFights" resultType="java.lang.Integer">
        select tbr.fight_id
        from tt_box_records tbr
        where tbr.user_id = #{playerId}
        group by tbr.fight_id
    </select>

    <select id="byCondition" resultType="com.ruoyi.domain.vo.boxRecords.TtBoxRecordsVO">

        select
            tbr.id,
            tbr.user_id,
            tbr.holder_user_id,
            ttu.nick_name as holderUserNickName,
            ttu.avatar as avatar,
            tbr.box_id,
            tbr.box_name,
            tbr.box_price,
            tbr.ornament_id,
            tto.name as ornament_name,
            tto.image_url,
            tol.level_img as ornament_level_img,
            tbr.ornaments_level_id,
            tbr.ornaments_price,
            tbr.`status`,
            tbr.create_time,
            tbr.update_time,
            tbr.is_open_box2_gift as isOpenBox2Gift
        from tt_box_records tbr
        left join tt_user ttu on ttu.user_id = tbr.user_id
        left join tt_ornament tto on tto.id = tbr.ornament_id
        left join tt_ornaments_level tol on tol.id = tbr.ornaments_level_id
        <where>

            <if test="boxRecordId != null">AND tbr.id = #{boxRecordId}</if>

            <if test="userId != null">AND tbr.user_id = #{userId}</if>

            <if test="boxId != null">AND tbr.box_id = #{boxId}</if>

            <if test="userType != null">AND ttu.user_type = #{userType}</if>


            <if test="ornamentPriceMin != null and ornamentPriceMax != null">
                AND tto.use_price between #{ornamentPriceMin} and #{ornamentPriceMax}
            </if>

            <if test="ornamentLevelIds != null and ornamentLevelIds.size >0">
                and tol.id in
                <foreach collection="ornamentLevelIds" open="(" close=")" item="lid" separator=",">
                    #{lid}
                </foreach>
            </if>

            <if test="source != null and source.size >0">
                and tbr.source in
                <foreach collection="source" open="(" close=")" item="sou" separator=",">
                    #{sou}
                </foreach>
            </if>

            <if test="status != null and status.size >0">
                and tbr.status in
                <foreach collection="status" open="(" close=")" item="sta" separator=",">
                    #{sta}
                </foreach>
            </if>

        </where>
        order by tbr.create_time
        <if test="orderByFie == null or orderByFie == 1"> asc</if>
        <if test="orderByFie == 0"> desc</if>
        limit #{limit},#{size}

    </select>

    <select id="propRankOfDay" resultType="com.ruoyi.domain.vo.TtUserPackSackDataVO">
        SELECT
            t2.uid AS holder_user_id,
            t2.nick_name AS nick_name,
            t2.avatar AS avatar,
            t2.max_price AS ornaments_price,
            t2.ornament_name AS ornament_name,
            t2.source AS source,
            t2.image_url AS image_url,
            row_number() over (ORDER BY t2.max_price DESC) as 'price_rank'
        FROM (
             SELECT
                 t1.uid as uid,
                 t1.nick_name as nick_name,
                 t1.avatar as avatar,
                 t1.price as max_price,
                 t1.ornament_name as ornament_name,
                 t1.source as source,
                 t1.image_url as image_url,
                 t1.rank
             FROM (
                  SELECT
                      tbr.holder_user_id AS uid,
                      ttu.nick_name as nick_name,
                      ttu.avatar as avatar,
                      tbr.ornaments_price AS price,
                      tbr.ornament_name AS ornament_name,
                      tbr.source AS source,
                      tbr.image_url AS image_url,
                      row_number() over (PARTITION BY tbr.holder_user_id ORDER BY tbr.ornaments_price DESC) as 'rank'
                  FROM tt_box_records tbr
                  left join tt_user ttu on ttu.user_id = tbr.holder_user_id
                      <where>
                          <if test="sources != null">
                              tbr.source in
                              <foreach collection="sources" item="sou" open="(" separator="," close=")">
                                  #{sou}
                              </foreach>
                          </if>

                          <if test="beginT != null and endT != null">
                              and tbr.create_time between #{beginT} and #{endT}
                          </if>
                      </where>
                  )t1 WHERE t1.rank = 1
                  LIMIT 0,#{number}
            ) t2
    </select>

    <select id="rollOpenPrize" resultType="com.ruoyi.domain.vo.boxRecords.TtBoxRecordsVO">

        select
            ttu.nick_name as holder_user_nick_name,
            ttu.avatar as avatar,

            tbr.holder_user_id as holder_user_id,
            tbr.ornament_id,
            tbr.ornaments_price,
            tbr.ornament_level_img,

            tto.name as ornament_name,
            tto.image_url,

            tbr.`status`,
            tbr.create_time,
            tbr.update_time
        from tt_box_records tbr
        left join tt_user ttu on ttu.user_id = tbr.holder_user_id
        left join tt_ornament tto on tto.id = tbr.ornament_id
        <where>
            <if test="rollId != null">AND tbr.roll_id = #{rollId}</if>
        </where>
        order by tbr.ornaments_price desc
        limit #{limit},#{size}

    </select>

    <sql id="rollOpenPrize_l1">

        select
        ttu.nick_name as holder_user_nick_name,
        ttu.avatar as avatar,
        tbr.holder_user_id as holder_user_id,

        tbr.ornament_id,
        tto.name as ornament_name,
        tto.image_url,
        tbr.ornaments_price,

        tol.level_img as ornament_level_img,

        tbr.`status`,
        tbr.create_time,
        tbr.update_time
        from tt_box_records tbr
        left join tt_user ttu on ttu.user_id = tbr.holder_user_id
        left join tt_roll_jackpot_ornaments trjo on tbr.ornament_id = trjo.ornaments_id
        left join tt_ornament tto on tto.id = tbr.ornament_id
        left join tt_ornaments_level tol on tol.id = trjo.ornament_level_id
        <where>
            <if test="rollId != null">AND tbr.roll_id = #{rollId}</if>
        </where>
        order by tbr.ornaments_price desc
        limit #{limit},#{size}

    </sql>

    <select id="checkDeliveryAble" resultType="java.lang.Integer">
        select
        count(t1.id)
        from (
        select
        tto.id as id
        from tt_box_records tbr
        left join tt_ornament tto on tto.id = tbr.ornament_id
        <where>

            <if test="packSackIds.size > 0">
                and tbr.id in
                <foreach collection="packSackIds" item="rid" open="(" separator="," close=")">
                    #{rid}
                </foreach>
            </if>

            and tto.is_proprietary_property = "0"
        </where>
        ) t1
    </select>

    <select id="checkAllDeliveryAble" resultType="java.lang.Integer">
        select
        count(t1.id)
        from (
        select
        tto.id as id
        from tt_box_records tbr
        left join tt_ornament tto on tto.id = tbr.ornament_id
        <where>
            and tbr.holder_user_id = #{userId}
            and tbr.status = 0
            and tto.is_proprietary_property = "0"
        </where>
        ) t1
    </select>

    <update id="updateStatusByIds" parameterType="java.util.List">
        update tt_box_records
        set status = #{status}
        where id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>